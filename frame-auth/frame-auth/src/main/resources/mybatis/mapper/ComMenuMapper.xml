<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cloud.frame.frameauth.dao.IComMenuDao">
    <resultMap id="BaseResultMap" type="com.cloud.frame.authclient.entity.ComMenu">
        <id column="menu_id" jdbcType="BIGINT" property="menuId" />
        <result column="menu_name" jdbcType="VARCHAR" property="menuName" />
        <result column="par_menu_id" jdbcType="BIGINT" property="parMenuId" />
        <result column="url" jdbcType="VARCHAR" property="url" />
        <result column="icon" jdbcType="VARCHAR" property="icon" />
        <result column="weight" jdbcType="TINYINT" property="weight" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="is_enable" jdbcType="TINYINT" property="isEnable" />
    </resultMap>

    <sql id="Base_Column_List">
        menu_id,menu_name,par_menu_id,url,icon,weight,create_time,is_enable
    </sql>

    <sql id="Base_Object_List">
        #{at.menuId},#{at.menuName},#{at.parMenuId},#{at.url},#{at.icon},#{at.weight},#{at.createTime},#{at.isEnable}
    </sql>

    <sql id="Set_Not_Null_List">
        <set>
            <if test="ut.menuId != null">
                menu_id = #{ut.menuId},
            </if>
            <if test="ut.menuName != null">
                menu_name = #{ut.menuName},
            </if>
            <if test="ut.parMenuId != null">
                par_menu_id = #{ut.parMenuId},
            </if>
            <if test="ut.url != null">
                url = #{ut.url},
            </if>
            <if test="ut.icon != null">
                icon = #{ut.icon},
            </if>
            <if test="ut.weight != null">
                weight = #{ut.weight},
            </if>
            <if test="ut.createTime != null">
                create_time = #{ut.createTime},
            </if>
            <if test="ut.isEnable != null">
                is_enable = #{ut.isEnable}
            </if>
        </set>
    </sql>

    <sql id="Set_With_Null_List">
        <set>
            menu_id = #{ut.menuId},
            menu_name = #{ut.menuName},
            par_menu_id = #{ut.parMenuId},
            url = #{ut.url},
            icon = #{ut.icon},
            weight = #{ut.weight},
            create_time = #{ut.createTime},
            is_enable = #{ut.isEnable}
        </set>
    </sql>

    <sql id="For_Each_Condition">
        <foreach collection="conditGroup.conditions" item="condit">
            <choose>
                <when test="condit.noValue">
                ${condit.condition}
                </when>
                <when test="condit.oneValue">
                ${condit.condition} #{condit.value1}
                </when>
                <when test="condit.secondValue">
                ${condit.condition} #{condit.value1} and #{condit.value2}
                </when>
                <when test="condit.listValue">
                ${condit.condition}
                    <foreach collection="condit.list" item="listItem" open="(" close=")" separator=",">
                    #{listItem}
                    </foreach>
                </when>
            </choose>
        </foreach>
    </sql>

    <sql id="where_sql">
        <if test="st.menuId != null">
            AND menu_id = #{st.menuId}
        </if>
        <if test="st.menuName != null">
            AND menu_name = #{st.menuName}
        </if>
        <if test="st.parMenuId != null">
            AND par_menu_id = #{st.parMenuId}
        </if>
        <if test="st.url != null">
            AND url = #{st.url}
        </if>
        <if test="st.icon != null">
            AND icon = #{st.icon}
        </if>
        <if test="st.weight != null">
            AND weight = #{st.weight}
        </if>
        <if test="st.createTime != null">
            AND create_time = #{st.createTime}
        </if>
        <if test="st.isEnable != null">
            AND is_enable = #{st.isEnable}
        </if>
        <if test="st.conditGroups != null">
            <foreach collection="st.conditGroups" item="conditGroup" separator=" ">
                <if test="conditGroup.valid">
                    ${conditGroup.opt}
                    <choose>
                        <when test="conditGroup.conditions.size() > 1">
                            <trim prefix="(" prefixOverrides="and|or" suffix=")">
                                <include refid="For_Each_Condition" />
                            </trim>
                        </when>
                        <otherwise>
                            <trim prefixOverrides="and|or">
                                <include refid="For_Each_Condition" />
                            </trim>
                        </otherwise>
                    </choose>
                </if>
            </foreach>
        </if>
    </sql>

    <!--获取最大的主键-->
    <select id="selectMaxId" resultType="java.lang.Long">
        select IFNULL(max(menu_id), 0) from `com_menu`
    </select>

    <!--根据主键获取对象-->
    <select id="selectById" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" /> from com_menu
        <where>
            AND menu_id = #{menuId}
        </where>
    </select>

    <!--查询列表-->
    <select id="selectList" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" /> from com_menu
        <where>
            <include refid="where_sql" />
        </where>
        <if test="st.orderByList!=null and st.orderByList.size() > 0">
            order by
            <foreach collection="st.orderByList" item="order" separator=",">
                ${order.field} ${order.mode}
            </foreach>
        </if>
        <if test="st.index != null and st.pageSize != null and st.pageSize > 0" >
            limit #{st.index},#{st.pageSize}
        </if>
    </select>

    <!--查询列表-->
    <select id="selectFieldList" resultMap="BaseResultMap">
        select
        <foreach collection="fl" item="field" separator=",">
            ${field}
        </foreach>
        from com_menu
        <where>
            <include refid="where_sql" />
        </where>
        <if test="st.orderByList!=null and st.orderByList.size() > 0">
            order by
            <foreach collection="st.orderByList" item="order" separator=",">
            ${order.field} ${order.mode}
            </foreach>
        </if>
        <if test="st.index != null and st.pageSize != null and st.pageSize > 0" >
            limit #{st.index},#{st.pageSize}
        </if>
    </select>

    <!--查询列表总数-->
    <select id="selectCount" resultType="java.lang.Long">
        select count(1) from com_menu
        <where>
            <include refid="where_sql" />
        </where>
    </select>

    <!--根据ID列表获取记录列表-->
    <select id="selectBatchIds" resultMap="BaseResultMap">
        select <include refid="Base_Column_List" /> from com_menu
        <where>
        menu_id in
            <foreach collection="list" open="(" close=")" separator="," item="item">
            #{item}
            </foreach>
        </where>
    </select>

    <!--插入对象-->
    <insert id="add">
        insert into com_menu(<include refid="Base_Column_List" />)
        values(<include refid="Base_Object_List" />)
    </insert>

    <!--批量插入对象-->
    <insert id="addBatch">
        insert into com_menu(<include refid="Base_Column_List" />)
        values
        <foreach collection="list" index="index" item="at" separator=",">
            (<include refid="Base_Object_List" />)
        </foreach>
    </insert>

    <!--更新对象-->
    <update id="updateNotNull">
        update com_menu
        <include refid="Set_Not_Null_List" />
        <where>
            AND menu_id = #{ut.menuId}
        </where>
    </update>

    <!--批量更新对象-->
    <update id="updateBatchNotNull">
        <foreach collection="list" separator=";" item="ut">
            update com_menu
            <include refid="Set_Not_Null_List" />
            <where>
                AND menu_id = #{ut.menuId}
            </where>
        </foreach>
    </update>

    <!--更新对象(全更新)-->
    <update id="updateWithNull">
        update com_menu
        <include refid="Set_With_Null_List" />
        <where>
            AND menu_id = #{ut.menuId}
        </where>
    </update>

    <!--批量更新对象(全更新)-->
    <update id="updateBatchWithNull">
        <foreach collection="list" separator=";" item="ut">
            update com_menu
            <include refid="Set_With_Null_List" />
            <where>
                AND menu_id = #{ut.menuId}
            </where>
        </foreach>
    </update>

    <!--更新对象,根据查询条件更新-->
    <update id="updateByMap">
        update com_menu
        <set>
            <foreach collection="um" index="key" item="value" separator=",">
                ${key} = #{value}
            </foreach>
        </set>
        <where>
            <include refid="where_sql" />
        </where>
    </update>

    <!--根据查询条件删除记录-->
    <delete id="delete">
        delete from com_menu
        <where>
            <include refid="where_sql" />
        </where>
    </delete>

    <!--根据主键删除对象-->
    <delete id="deleteById">
        delete from com_menu
        <where>
            AND menu_id = #{menuId}
        </where>
    </delete>

    <!-- 批量删除对象 -->
    <delete id="deleteBatchIds">
        delete from com_menu
        <where>
            menu_id in
            <foreach collection="list" open="(" close=")" separator="," item="item">
                #{item}
            </foreach>
        </where>
    </delete>


    <!--~~~~~~~~~~~~~~~~~~~~~~ custom code begin ~~~~~~~~~~~~~~~~~~~~~~-->
    
    <!--~~~~~~~~~~~~~~~~~~~~~~ custom code end ~~~~~~~~~~~~~~~~~~~~~~-->

</mapper>